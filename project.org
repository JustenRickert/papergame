-*- mode: org -*-

* Idea
The idea is to come up with a really great browser game written in Typescript.
Thus far the game contains:

- [X] Circles that can move around on the page
  - I got the circles to move around in a pretty straightforward, I think.

- [X] Basic Collision implementation
  - At the moment I'm dealing with the circle's logistical problems. I have
    included a notion called `state' which will house a collision attribute. At
    each frame, the collision status of each circle will be measured. In the
    future when more interesting things are to happen this function may be able
    to facilitate other effects as well. Perhaps the function can be append to
    pass an array of data that could be useful to the functions utilizing it.
  - What I want to do now is possibly just that. I was thinking I could simply
    change the `acc' value temporarily while the 'colliding' is true. It would
    be set to the value opposing its direction to the colliding circle, so
    `acc_value' * (distance - v1.radius - v2.radius). So an acceleration
    opposing the closeness of the circles so that the two will be pushed away.

- [ ] Physics Collision
  - I've been toying around with it. I think what I need to do is split the
    movement into two separate methods:
    - *Movement based movement* meaning everything just wants to move in the
      direction that it wants to go. If it's in the wrong direction, it must
      turn first.
    - *Physics based movement* When two circles are colliding, there will be
      applied an equal force between them, but in opposing directions. At each
      frame, this force is to be converted into momentum (which is being divided
      to move it toward zero) at every frame. These two things can be tweaked
      against one another until they then function appropriately on the screen.
  - After that they need to be able to not like each other. So they have to take
    damage and stuff from each other.

- [ ] Attacking
  - Make the red guy have health and the other guys not have health. Then when one
    attacks the other loses health. Heh.

* Plan
I am hoping to have it so that there can be two sides, each starting on the
opposing side of the map, that will have attacking units. Thus I will need to
implement

- [ ] Friendly units
- [ ] Enemy units
- [ ] A dialog that allows friendly units and enemy units to interact.

